12/5/2024

I need to combine partial data sources:

1. parse text from chatgpt.

    Create a library of key words that are associated with our flavor/smell/taste/etc. keywords.
    Assign values to different words and potential qualifiers (words before or after i.e. "slightly", "overly") that increase the value of
    characteristics.
    Gather datasets on all beer ingredients through chatgpt and then we can continue from there.
    Differentiate between different types of parsing, hops, grains, beers, methods. It will be obvious that certain grains and beers have a relationship
    but by creating structures for individual components that make up a beers whole we can better predict whether those ingredients really do create certain
    flavor profiles

        An example:

        If we parse through grains, malts, hops and methods and find that each of these should have certain effects on the beers profile, we can then compare the
        expected profile to that of a beer that would typically result from those combined characteristics.

        We need to notify the parser whether it is reading from beers themselves or ingredients.
        This will allow us to create several databases to pull from.

    Changes to implement:

        First adjust the parser to accept text data related to beer, hops, malts/grains, water, and ingredients and store them as different structures
        that will then be transfered to a database. The best way to start this is to continue parsing our chatgpt generated hop information using
        a few simple key words and gradually building that list once the parser is working correctly. Then continue
        from there with grain generated information.

        Next continue to build libraries of keywords that pertain to the different types of structures so that more information is being gathered whether
        or not there are specific values assigned to key words. Meaning if the word sweet shows up in a review instead of a rating scale generated by chatgpt
        in a beer text dataset we can change the value of that beers characteristic in the structure.

        Once the parser works reasonably well with similarly formatted data with values we can begin to configure it for non-value assigned data (if a key word
        shows up increase or decrease a value), and from there we can effectively parse through a much wider range of sources. We can also assign generic values
        to types of beer that fulfill our rating values and then adjust the data based on reviews.

2. parse CSV datasets for valuable parameters
3. find valuable data within limited APIs (bitterness, brewing time, etc.)
4. structure and compare variables


12/18/2024

Next steps,

1. Adjust the text parser to be able to break down multiple different types of data and formats.
Need to make it so that the parser can sort through different files without adjusting the code.
2. Start finding resources that the socket can pull from and then be parsed.
3. Decide what types of analysis would be best to implement first.
4. Start breaking down parameters of beers and then what variables most effect those params.

12/31/2024

Need to update the regex to be able to find the values for both hop data and grain data.

2/2/2025

Next step is to add a method that will parse the filename and use various logic to understand what type of ingredient the data represents.
Then we need to parse that data itself and if the parameters can fit into our established flavors. If not we need to set up a system of comparison.
